{
  "address": "0xd7477321a84f3d39b8d742580f3740016658135d",
  "abi": [
    {
      "inputs": [],
      "name": "ETH",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "popsicle",
      "outputs": [
        {
          "internalType": "contract IPopsicle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x22cd4712a21f83875f934f64deb94730da3c91d37cd0b1ac08cfb60954ff2ba2",
  "receipt": {
    "to": null,
    "from": "0xb4efda6daf5ef75d08869a0f9c0213278fb43b6c",
    "contractAddress": "0xd7477321a84f3d39b8d742580f3740016658135d",
    "transactionIndex": "0x46",
    "gasUsed": "0x9b043",
    "logsBloom": "0x
    "blockHash": "0x3fd78a23f5995f8480b9b6788d0379be39871cfcbda7d78dd7500d80bb2af6b6",
    "transactionHash": "0x22cd4712a21f83875f934f64deb94730da3c91d37cd0b1ac08cfb60954ff2ba2",
    "logs": [],
    "blockNumber": "0xccc956",
    "cumulativeGasUsed": "0x5c6ede",
    "status": "0x1"
  },
  "args": [],
  "solcInputHash": "440791bc5bda2523ff02e4d0a2557f8b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ETH\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"popsicle\",\"outputs\":[{\"internalType\":\"contract IPopsicle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/PopsicleUSDCWETH.sol\":\"PopsicleUSDCWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.6.12;\\n\\ninterface IOracle {\\n    /// @notice Get the latest exchange rate.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\n\\n    /// @notice Check the last exchange rate without any state changes.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\n\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\n\\n    /// @notice Returns a human readable (short) name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable symbol name about this oracle.\\n    function symbol(bytes calldata data) external view returns (string memory);\\n\\n    /// @notice Returns a human readable name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable name about this oracle.\\n    function name(bytes calldata data) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x558a9784fc707121492ac785a12d99b4af8d00d87bee215eeb9e40be874090f3\",\"license\":\"MIT\"},\"contracts/oracles/PopsicleUSDCWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\nimport \\\"../interfaces/IOracle.sol\\\";\\n\\n// Chainlink Aggregator\\n\\ninterface IAggregator {\\n    function latestAnswer() external view returns (int256 answer);\\n}\\n\\ninterface IPopsicle {\\n    function userAmounts() external view returns (uint256 amount0, uint256 amount1);\\n    function totalSupply() external view returns (uint256 amount);\\n}\\n\\ncontract PopsicleUSDCWETH is IOracle {\\n    IAggregator constant public USDC = IAggregator(0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6);\\n    IAggregator constant public ETH = IAggregator(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\\n    IPopsicle constant public popsicle = IPopsicle(0x51aEA310a8FFF21c09Eee4594F3dA396209Bd398);\\n\\n    // Calculates the lastest exchange rate\\n    // Uses both divide and multiply only for tokens not supported directly by Chainlink, for example MKR/USD\\n    function _get() internal view returns (uint256) {\\n\\n        (uint256 amount0, uint256 amount1) = popsicle.userAmounts();\\n\\n        uint256 popsiclePrice = (amount0 * 1e12 * uint256(USDC.latestAnswer()) + amount1 * uint256(ETH.latestAnswer())) / popsicle.totalSupply() / 1e8;\\n\\n        return 1e36 / popsiclePrice;\\n    }\\n\\n    // Get the latest exchange rate\\n    /// @inheritdoc IOracle\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the last exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the current spot exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\\n        (, rate) = peek(data);\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function name(bytes calldata) public pure override returns (string memory) {\\n        return \\\"Chainlink Popsicle\\\";\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function symbol(bytes calldata) public pure override returns (string memory) {\\n        return \\\"LINK/PLP\\\";\\n    }\\n}\\n\",\"keccak256\":\"0xe9334d6b379d94f616807299601713d6ed3058965015a33c9ffd8e8b71ceb562\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a8c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d568866c1161005b578063d568866c14610129578063d6d7d52514610159578063dc502dfa1461018a578063eeb8a8d3146101a857610088565b80638322fff21461008d57806389a30271146100ab578063c699c4d6146100c9578063d39bbef0146100f9575b600080fd5b6100956101d9565b6040516100a2919061078e565b60405180910390f35b6100b36101f1565b6040516100c0919061078e565b60405180910390f35b6100e360048036038101906100de919061061d565b610209565b6040516100f091906107c4565b60405180910390f35b610113600480360381019061010e919061061d565b610249565b60405161012091906107e6565b60405180910390f35b610143600480360381019061013e919061061d565b610261565b60405161015091906107c4565b60405180910390f35b610173600480360381019061016e919061061d565b6102a1565b604051610181929190610765565b60405180910390f35b6101926102b9565b60405161019f91906107a9565b60405180910390f35b6101c260048036038101906101bd919061061d565b6102d1565b6040516101d0929190610765565b60405180910390f35b735f4ec3df9cbd43714fe2740f5e3616155c5b841981565b738fffffd4afb6115b954bd326cbe7b4ba576818f681565b60606040518060400160405280600881526020017f4c494e4b2f504c50000000000000000000000000000000000000000000000000815250905092915050565b600061025583836102d1565b90508091505092915050565b60606040518060400160405280601281526020017f436861696e6c696e6b20506f707369636c650000000000000000000000000000815250905092915050565b60008060016102ae6102e9565b915091509250929050565b7351aea310a8fff21c09eee4594f3da396209bd39881565b60008060016102de6102e9565b915091509250929050565b60008060007351aea310a8fff21c09eee4594f3da396209bd39873ffffffffffffffffffffffffffffffffffffffff166311cd7bce6040518163ffffffff1660e01b8152600401604080518083038186803b15801561034757600080fd5b505afa15801561035b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037f91906106b4565b9150915060006305f5e1007351aea310a8fff21c09eee4594f3da396209bd39873ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e457600080fd5b505afa1580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c919061068b565b735f4ec3df9cbd43714fe2740f5e3616155c5b841973ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190610662565b846104b991906108a4565b738fffffd4afb6115b954bd326cbe7b4ba576818f673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610662565b64e8d4a510008761055c91906108a4565b61056691906108a4565b610570919061081d565b61057a9190610873565b6105849190610873565b9050806ec097ce7bc90715b34b9f10000000006105a19190610873565b935050505090565b60008083601f8401126105bb57600080fd5b8235905067ffffffffffffffff8111156105d457600080fd5b6020830191508360018202830111156105ec57600080fd5b9250929050565b60008151905061060281610a28565b92915050565b60008151905061061781610a3f565b92915050565b6000806020838503121561063057600080fd5b600083013567ffffffffffffffff81111561064a57600080fd5b610656858286016105a9565b92509250509250929050565b60006020828403121561067457600080fd5b6000610682848285016105f3565b91505092915050565b60006020828403121561069d57600080fd5b60006106ab84828501610608565b91505092915050565b600080604083850312156106c757600080fd5b60006106d585828601610608565b92505060206106e685828601610608565b9150509250929050565b6106f9816108fe565b82525050565b6107088161093e565b82525050565b61071781610962565b82525050565b600061072882610801565b610732818561080c565b9350610742818560208601610986565b61074b81610a17565b840191505092915050565b61075f81610934565b82525050565b600060408201905061077a60008301856106f0565b6107876020830184610756565b9392505050565b60006020820190506107a360008301846106ff565b92915050565b60006020820190506107be600083018461070e565b92915050565b600060208201905081810360008301526107de818461071d565b905092915050565b60006020820190506107fb6000830184610756565b92915050565b600081519050919050565b600082825260208201905092915050565b600061082882610934565b915061083383610934565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610868576108676109b9565b5b828201905092915050565b600061087e82610934565b915061088983610934565b925082610899576108986109e8565b5b828204905092915050565b60006108af82610934565b91506108ba83610934565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108f3576108f26109b9565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061094982610950565b9050919050565b600061095b82610914565b9050919050565b600061096d82610974565b9050919050565b600061097f82610914565b9050919050565b60005b838110156109a4578082015181840152602081019050610989565b838111156109b3576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b610a318161090a565b8114610a3c57600080fd5b50565b610a4881610934565b8114610a5357600080fd5b5056fea2646970667358221220a95b64fb373c88ef06947268d29a86acef4368046854140e3945a2338a618d8a64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063d568866c1161005b578063d568866c14610129578063d6d7d52514610159578063dc502dfa1461018a578063eeb8a8d3146101a857610088565b80638322fff21461008d57806389a30271146100ab578063c699c4d6146100c9578063d39bbef0146100f9575b600080fd5b6100956101d9565b6040516100a2919061078e565b60405180910390f35b6100b36101f1565b6040516100c0919061078e565b60405180910390f35b6100e360048036038101906100de919061061d565b610209565b6040516100f091906107c4565b60405180910390f35b610113600480360381019061010e919061061d565b610249565b60405161012091906107e6565b60405180910390f35b610143600480360381019061013e919061061d565b610261565b60405161015091906107c4565b60405180910390f35b610173600480360381019061016e919061061d565b6102a1565b604051610181929190610765565b60405180910390f35b6101926102b9565b60405161019f91906107a9565b60405180910390f35b6101c260048036038101906101bd919061061d565b6102d1565b6040516101d0929190610765565b60405180910390f35b735f4ec3df9cbd43714fe2740f5e3616155c5b841981565b738fffffd4afb6115b954bd326cbe7b4ba576818f681565b60606040518060400160405280600881526020017f4c494e4b2f504c50000000000000000000000000000000000000000000000000815250905092915050565b600061025583836102d1565b90508091505092915050565b60606040518060400160405280601281526020017f436861696e6c696e6b20506f707369636c650000000000000000000000000000815250905092915050565b60008060016102ae6102e9565b915091509250929050565b7351aea310a8fff21c09eee4594f3da396209bd39881565b60008060016102de6102e9565b915091509250929050565b60008060007351aea310a8fff21c09eee4594f3da396209bd39873ffffffffffffffffffffffffffffffffffffffff166311cd7bce6040518163ffffffff1660e01b8152600401604080518083038186803b15801561034757600080fd5b505afa15801561035b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037f91906106b4565b9150915060006305f5e1007351aea310a8fff21c09eee4594f3da396209bd39873ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e457600080fd5b505afa1580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c919061068b565b735f4ec3df9cbd43714fe2740f5e3616155c5b841973ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190610662565b846104b991906108a4565b738fffffd4afb6115b954bd326cbe7b4ba576818f673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610662565b64e8d4a510008761055c91906108a4565b61056691906108a4565b610570919061081d565b61057a9190610873565b6105849190610873565b9050806ec097ce7bc90715b34b9f10000000006105a19190610873565b935050505090565b60008083601f8401126105bb57600080fd5b8235905067ffffffffffffffff8111156105d457600080fd5b6020830191508360018202830111156105ec57600080fd5b9250929050565b60008151905061060281610a28565b92915050565b60008151905061061781610a3f565b92915050565b6000806020838503121561063057600080fd5b600083013567ffffffffffffffff81111561064a57600080fd5b610656858286016105a9565b92509250509250929050565b60006020828403121561067457600080fd5b6000610682848285016105f3565b91505092915050565b60006020828403121561069d57600080fd5b60006106ab84828501610608565b91505092915050565b600080604083850312156106c757600080fd5b60006106d585828601610608565b92505060206106e685828601610608565b9150509250929050565b6106f9816108fe565b82525050565b6107088161093e565b82525050565b61071781610962565b82525050565b600061072882610801565b610732818561080c565b9350610742818560208601610986565b61074b81610a17565b840191505092915050565b61075f81610934565b82525050565b600060408201905061077a60008301856106f0565b6107876020830184610756565b9392505050565b60006020820190506107a360008301846106ff565b92915050565b60006020820190506107be600083018461070e565b92915050565b600060208201905081810360008301526107de818461071d565b905092915050565b60006020820190506107fb6000830184610756565b92915050565b600081519050919050565b600082825260208201905092915050565b600061082882610934565b915061083383610934565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610868576108676109b9565b5b828201905092915050565b600061087e82610934565b915061088983610934565b925082610899576108986109e8565b5b828204905092915050565b60006108af82610934565b91506108ba83610934565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108f3576108f26109b9565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061094982610950565b9050919050565b600061095b82610914565b9050919050565b600061096d82610974565b9050919050565b600061097f82610914565b9050919050565b60005b838110156109a4578082015181840152602081019050610989565b838111156109b3576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b610a318161090a565b8114610a3c57600080fd5b50565b610a4881610934565b8114610a5357600080fd5b5056fea2646970667358221220a95b64fb373c88ef06947268d29a86acef4368046854140e3945a2338a618d8a64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "name(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "peekSpot(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate."
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle."
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes."
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}