{
  "address": "0xFf498bbCbf40d0f30f178F553e8Fa36153baf30b",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MIM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UST",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UST2POOL",
      "outputs": [
        {
          "internalType": "contract CurvePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "degenBox",
      "outputs": [
        {
          "internalType": "contract IBentoBoxV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareToMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareFrom",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "extraShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareReturned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "toToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "refundTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareFromSupplied",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareToExact",
          "type": "uint256"
        }
      ],
      "name": "swapExact",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shareUsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareReturned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8b046b13625b53cb7660ec6e600dc5ab9d28c101ecf2c9f8eb66cbffac1554f3",
  "receipt": {
    "to": null,
    "from": "0xb4EfdA6DAf5ef75D08869A0f9C0213278fb43b6C",
    "contractAddress": "0xFf498bbCbf40d0f30f178F553e8Fa36153baf30b",
    "transactionIndex": 159,
    "gasUsed": "653194",
    "logsBloom": "0x
    "blockHash": "0x77115fd2e14604479d1504dabb2424484d11adcfdf39728787cc4612ba1d3eb1",
    "transactionHash": "0x8b046b13625b53cb7660ec6e600dc5ab9d28c101ecf2c9f8eb66cbffac1554f3",
    "logs": [
      {
        "transactionIndex": 159,
        "blockNumber": 13537203,
        "transactionHash": "0x8b046b13625b53cb7660ec6e600dc5ab9d28c101ecf2c9f8eb66cbffac1554f3",
        "address": "0xa47c8bf37f92aBed4A126BDA807A7b7498661acD",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ff498bbcbf40d0f30f178f553e8fa36153baf30b",
          "0x00000000000000000000000055a8a39bc9694714e2874c1ce77aa1e599461e18"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 148,
        "blockHash": "0x77115fd2e14604479d1504dabb2424484d11adcfdf39728787cc4612ba1d3eb1"
      },
      {
        "transactionIndex": 159,
        "blockNumber": 13537203,
        "transactionHash": "0x8b046b13625b53cb7660ec6e600dc5ab9d28c101ecf2c9f8eb66cbffac1554f3",
        "address": "0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000ff498bbcbf40d0f30f178f553e8fa36153baf30b",
          "0x000000000000000000000000d96f48665a1410c0cd669a88898eca36b9fc2cce"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 149,
        "blockHash": "0x77115fd2e14604479d1504dabb2424484d11adcfdf39728787cc4612ba1d3eb1"
      }
    ],
    "blockNumber": 13537203,
    "cumulativeGasUsed": "8187709",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a2491d78ce5b76b0330ef031e7a20c20",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MIM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UST\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UST2POOL\",\"outputs\":[{\"internalType\":\"contract CurvePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"degenBox\",\"outputs\":[{\"internalType\":\"contract IBentoBoxV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareToMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareFrom\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"extraShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareReturned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refundTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareFromSupplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareToExact\",\"type\":\"uint256\"}],\"name\":\"swapExact\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shareUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareReturned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swap(address,address,address,uint256,uint256)\":{\"notice\":\"Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper. Swaps it for at least 'amountToMin' of token 'to'. Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer. Returns the amount of tokens 'to' transferred to BentoBox. (The BentoBox skim function will be used by the caller to get the swapped funds).\"},\"swapExact(address,address,address,address,uint256,uint256)\":{\"notice\":\"Calculates the amount of token 'from' needed to complete the swap (amountFrom), this should be less than or equal to amountFromMax. Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper. Swaps it for exactly 'exactAmountTo' of token 'to'. Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer. Transfers allocated, but unused 'from' tokens within the BentoBox to 'refundTo' (amountFromMax - amountFrom). Returns the amount of 'from' tokens withdrawn from BentoBox (amountFrom). (The BentoBox skim function will be used by the caller to get the swapped funds).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swappers/Liquidations/USTSwapper.sol\":\"USTSwapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISwapperGeneric.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.6.12;\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\ninterface ISwapperGeneric {\\n    /// @notice Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper.\\n    /// Swaps it for at least 'amountToMin' of token 'to'.\\n    /// Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer.\\n    /// Returns the amount of tokens 'to' transferred to BentoBox.\\n    /// (The BentoBox skim function will be used by the caller to get the swapped funds).\\n    function swap(\\n        IERC20 fromToken,\\n        IERC20 toToken,\\n        address recipient,\\n        uint256 shareToMin,\\n        uint256 shareFrom\\n    ) external returns (uint256 extraShare, uint256 shareReturned);\\n\\n    /// @notice Calculates the amount of token 'from' needed to complete the swap (amountFrom),\\n    /// this should be less than or equal to amountFromMax.\\n    /// Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper.\\n    /// Swaps it for exactly 'exactAmountTo' of token 'to'.\\n    /// Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer.\\n    /// Transfers allocated, but unused 'from' tokens within the BentoBox to 'refundTo' (amountFromMax - amountFrom).\\n    /// Returns the amount of 'from' tokens withdrawn from BentoBox (amountFrom).\\n    /// (The BentoBox skim function will be used by the caller to get the swapped funds).\\n    function swapExact(\\n        IERC20 fromToken,\\n        IERC20 toToken,\\n        address recipient,\\n        address refundTo,\\n        uint256 shareFromSupplied,\\n        uint256 shareToExact\\n    ) external returns (uint256 shareUsed, uint256 shareReturned);\\n}\\n\",\"keccak256\":\"0x92887c2274ec61fda432b5597fa957d0dc7ae5cd38c7e9c809e5c0407e1800dc\",\"license\":\"MIT\"},\"contracts/swappers/Liquidations/USTSwapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\nimport \\\"../../interfaces/ISwapperGeneric.sol\\\";\\n\\ninterface CurvePool {\\n    function exchange_underlying(int128 i, int128 j, uint256 dx, uint256 min_dy, address receiver) external returns (uint256);\\n    function exchange(int128 i, int128 j, uint256 dx, uint256 min_dy, address receiver) external returns (uint256);\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n    function add_liquidity(uint256[3] memory amounts, uint256 _min_mint_amount) external;\\n}\\n\\ninterface IBentoBoxV1 {\\n    function withdraw(IERC20 token, address from, address to, uint256 amount, uint256 share) external returns(uint256, uint256);\\n    function deposit(IERC20 token, address from, address to, uint256 amount, uint256 share) external returns(uint256, uint256);\\n}\\n\\ncontract USTSwapper is ISwapperGeneric {\\n\\n    // Local variables\\n    IBentoBoxV1 public constant degenBox = IBentoBoxV1(0xd96f48665a1410C0cd669A88898ecA36B9Fc2cce);\\n    CurvePool constant public UST2POOL = CurvePool(0x55A8a39bc9694714E2874c1ce77aa1E599461E18);\\n    IERC20 public constant MIM = IERC20(0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3);\\n    IERC20 public constant UST = IERC20(0xa47c8bf37f92aBed4A126BDA807A7b7498661acD);\\n\\n    constructor() public {\\n        UST.approve(address(UST2POOL), type(uint256).max);\\n        MIM.approve(address(degenBox), type(uint256).max);\\n    }\\n\\n\\n    // Swaps to a flexible amount, from an exact input amount\\n    /// @inheritdoc ISwapperGeneric\\n    function swap(\\n        IERC20 fromToken,\\n        IERC20 toToken,\\n        address recipient,\\n        uint256 shareToMin,\\n        uint256 shareFrom\\n    ) public override returns (uint256 extraShare, uint256 shareReturned) {\\n\\n        (uint256 amountFrom, ) = degenBox.withdraw(UST, address(this), address(this), 0, shareFrom);\\n\\n        uint256 amountTo = UST2POOL.exchange(1, 0, amountFrom, 0, address(degenBox));\\n\\n        (, shareReturned) = degenBox.deposit(MIM, address(degenBox), recipient, amountTo, 0);\\n        extraShare = shareReturned - shareToMin;\\n    }\\n\\n    // Swaps to an exact amount, from a flexible input amount\\n    /// @inheritdoc ISwapperGeneric\\n    function swapExact(\\n        IERC20 fromToken,\\n        IERC20 toToken,\\n        address recipient,\\n        address refundTo,\\n        uint256 shareFromSupplied,\\n        uint256 shareToExact\\n    ) public override returns (uint256 shareUsed, uint256 shareReturned) {\\n        return (0,0);\\n    }\\n}\",\"keccak256\":\"0x83fffa4e2c63a0742f65b136f1b149daf5ef258cbb1d3e63ab64b15ea740b1b1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5073a47c8bf37f92abed4a126bda807a7b7498661acd73ffffffffffffffffffffffffffffffffffffffff1663095ea7b37355a8a39bc9694714e2874c1ce77aa1e599461e187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016200009792919062000235565b602060405180830381600087803b158015620000b257600080fd5b505af1158015620000c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ed9190620001e7565b507399d8a9c45b2eca8864373a26d1459e3dff1e17f373ffffffffffffffffffffffffffffffffffffffff1663095ea7b373d96f48665a1410c0cd669a88898eca36b9fc2cce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016200017392919062000235565b602060405180830381600087803b1580156200018e57600080fd5b505af1158015620001a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c99190620001e7565b50620002c6565b600081519050620001e181620002ac565b92915050565b600060208284031215620001fa57600080fd5b60006200020a84828501620001d0565b91505092915050565b6200021e8162000262565b82525050565b6200022f81620002a2565b82525050565b60006040820190506200024c600083018562000213565b6200025b602083018462000224565b9392505050565b60006200026f8262000282565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002b78162000276565b8114620002c357600080fd5b50565b6109a980620002d66000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634622be9014610067578063931893f2146100985780639f495c15146100b6578063daec383d146100d4578063e343fe12146100f2578063e7ec9f3014610123575b600080fd5b610081600480360381019061007c919061047e565b610141565b60405161008f9291906107a5565b60405180910390f35b6100a0610156565b6040516100ad919061065b565b60405180910390f35b6100be61016e565b6040516100cb9190610676565b60405180910390f35b6100dc610186565b6040516100e99190610691565b60405180910390f35b61010c60048036038101906101079190610507565b61019e565b60405161011a9291906107a5565b60405180910390f35b61012b610412565b6040516101389190610691565b60405180910390f35b60008060008091509150965096945050505050565b7355a8a39bc9694714e2874c1ce77aa1e599461e1881565b73d96f48665a1410c0cd669a88898eca36b9fc2cce81565b7399d8a9c45b2eca8864373a26d1459e3dff1e17f381565b600080600073d96f48665a1410c0cd669a88898eca36b9fc2cce73ffffffffffffffffffffffffffffffffffffffff166397da6d3073a47c8bf37f92abed4a126bda807a7b7498661acd30306000896040518663ffffffff1660e01b815260040161020d9594939291906106ac565b6040805180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e91906105a7565b50905060007355a8a39bc9694714e2874c1ce77aa1e599461e1873ffffffffffffffffffffffffffffffffffffffff1663ddc1f59d6001600085600073d96f48665a1410c0cd669a88898eca36b9fc2cce6040518663ffffffff1660e01b81526004016102cf959493929190610752565b602060405180830381600087803b1580156102e957600080fd5b505af11580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610321919061057e565b905073d96f48665a1410c0cd669a88898eca36b9fc2cce73ffffffffffffffffffffffffffffffffffffffff166302b9446c7399d8a9c45b2eca8864373a26d1459e3dff1e17f373d96f48665a1410c0cd669a88898eca36b9fc2cce8a8560006040518663ffffffff1660e01b81526004016103a19594939291906106ff565b6040805180830381600087803b1580156103ba57600080fd5b505af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f291906105a7565b905080935050858361040491906107ce565b935050509550959350505050565b73a47c8bf37f92abed4a126bda807a7b7498661acd81565b6000813590506104398161092e565b92915050565b60008135905061044e81610945565b92915050565b6000813590506104638161095c565b92915050565b6000815190506104788161095c565b92915050565b60008060008060008060c0878903121561049757600080fd5b60006104a589828a0161043f565b96505060206104b689828a0161043f565b95505060406104c789828a0161042a565b94505060606104d889828a0161042a565b93505060806104e989828a01610454565b92505060a06104fa89828a01610454565b9150509295509295509295565b600080600080600060a0868803121561051f57600080fd5b600061052d8882890161043f565b955050602061053e8882890161043f565b945050604061054f8882890161042a565b935050606061056088828901610454565b925050608061057188828901610454565b9150509295509295909350565b60006020828403121561059057600080fd5b600061059e84828501610469565b91505092915050565b600080604083850312156105ba57600080fd5b60006105c885828601610469565b92505060206105d985828601610469565b9150509250929050565b6105ec81610802565b82525050565b6105fb8161085d565b82525050565b61060a81610881565b82525050565b610619816108a5565b82525050565b610628816108c9565b82525050565b610637816108db565b82525050565b610646816108ed565b82525050565b61065581610853565b82525050565b600060208201905061067060008301846105f2565b92915050565b600060208201905061068b6000830184610601565b92915050565b60006020820190506106a66000830184610610565b92915050565b600060a0820190506106c16000830188610610565b6106ce60208301876105e3565b6106db60408301866105e3565b6106e8606083018561062e565b6106f5608083018461064c565b9695505050505050565b600060a0820190506107146000830188610610565b61072160208301876105e3565b61072e60408301866105e3565b61073b606083018561064c565b610748608083018461062e565b9695505050505050565b600060a082019050610767600083018861063d565b610774602083018761061f565b610781604083018661064c565b61078e606083018561062e565b61079b60808301846105e3565b9695505050505050565b60006040820190506107ba600083018561064c565b6107c7602083018461064c565b9392505050565b60006107d982610853565b91506107e483610853565b9250828210156107f7576107f66108ff565b5b828203905092915050565b600061080d82610833565b9050919050565b600061081f82610802565b9050919050565b600081600f0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108688261086f565b9050919050565b600061087a82610833565b9050919050565b600061088c82610893565b9050919050565b600061089e82610833565b9050919050565b60006108b0826108b7565b9050919050565b60006108c282610833565b9050919050565b60006108d482610826565b9050919050565b60006108e682610853565b9050919050565b60006108f882610826565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61093781610802565b811461094257600080fd5b50565b61094e81610814565b811461095957600080fd5b50565b61096581610853565b811461097057600080fd5b5056fea26469706673582212207d6c6c8f33b4d76e93bf69bcd6cf6a1f6ca0e9d5341787b88700378455e557e964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80634622be9014610067578063931893f2146100985780639f495c15146100b6578063daec383d146100d4578063e343fe12146100f2578063e7ec9f3014610123575b600080fd5b610081600480360381019061007c919061047e565b610141565b60405161008f9291906107a5565b60405180910390f35b6100a0610156565b6040516100ad919061065b565b60405180910390f35b6100be61016e565b6040516100cb9190610676565b60405180910390f35b6100dc610186565b6040516100e99190610691565b60405180910390f35b61010c60048036038101906101079190610507565b61019e565b60405161011a9291906107a5565b60405180910390f35b61012b610412565b6040516101389190610691565b60405180910390f35b60008060008091509150965096945050505050565b7355a8a39bc9694714e2874c1ce77aa1e599461e1881565b73d96f48665a1410c0cd669a88898eca36b9fc2cce81565b7399d8a9c45b2eca8864373a26d1459e3dff1e17f381565b600080600073d96f48665a1410c0cd669a88898eca36b9fc2cce73ffffffffffffffffffffffffffffffffffffffff166397da6d3073a47c8bf37f92abed4a126bda807a7b7498661acd30306000896040518663ffffffff1660e01b815260040161020d9594939291906106ac565b6040805180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e91906105a7565b50905060007355a8a39bc9694714e2874c1ce77aa1e599461e1873ffffffffffffffffffffffffffffffffffffffff1663ddc1f59d6001600085600073d96f48665a1410c0cd669a88898eca36b9fc2cce6040518663ffffffff1660e01b81526004016102cf959493929190610752565b602060405180830381600087803b1580156102e957600080fd5b505af11580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610321919061057e565b905073d96f48665a1410c0cd669a88898eca36b9fc2cce73ffffffffffffffffffffffffffffffffffffffff166302b9446c7399d8a9c45b2eca8864373a26d1459e3dff1e17f373d96f48665a1410c0cd669a88898eca36b9fc2cce8a8560006040518663ffffffff1660e01b81526004016103a19594939291906106ff565b6040805180830381600087803b1580156103ba57600080fd5b505af11580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f291906105a7565b905080935050858361040491906107ce565b935050509550959350505050565b73a47c8bf37f92abed4a126bda807a7b7498661acd81565b6000813590506104398161092e565b92915050565b60008135905061044e81610945565b92915050565b6000813590506104638161095c565b92915050565b6000815190506104788161095c565b92915050565b60008060008060008060c0878903121561049757600080fd5b60006104a589828a0161043f565b96505060206104b689828a0161043f565b95505060406104c789828a0161042a565b94505060606104d889828a0161042a565b93505060806104e989828a01610454565b92505060a06104fa89828a01610454565b9150509295509295509295565b600080600080600060a0868803121561051f57600080fd5b600061052d8882890161043f565b955050602061053e8882890161043f565b945050604061054f8882890161042a565b935050606061056088828901610454565b925050608061057188828901610454565b9150509295509295909350565b60006020828403121561059057600080fd5b600061059e84828501610469565b91505092915050565b600080604083850312156105ba57600080fd5b60006105c885828601610469565b92505060206105d985828601610469565b9150509250929050565b6105ec81610802565b82525050565b6105fb8161085d565b82525050565b61060a81610881565b82525050565b610619816108a5565b82525050565b610628816108c9565b82525050565b610637816108db565b82525050565b610646816108ed565b82525050565b61065581610853565b82525050565b600060208201905061067060008301846105f2565b92915050565b600060208201905061068b6000830184610601565b92915050565b60006020820190506106a66000830184610610565b92915050565b600060a0820190506106c16000830188610610565b6106ce60208301876105e3565b6106db60408301866105e3565b6106e8606083018561062e565b6106f5608083018461064c565b9695505050505050565b600060a0820190506107146000830188610610565b61072160208301876105e3565b61072e60408301866105e3565b61073b606083018561064c565b610748608083018461062e565b9695505050505050565b600060a082019050610767600083018861063d565b610774602083018761061f565b610781604083018661064c565b61078e606083018561062e565b61079b60808301846105e3565b9695505050505050565b60006040820190506107ba600083018561064c565b6107c7602083018461064c565b9392505050565b60006107d982610853565b91506107e483610853565b9250828210156107f7576107f66108ff565b5b828203905092915050565b600061080d82610833565b9050919050565b600061081f82610802565b9050919050565b600081600f0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108688261086f565b9050919050565b600061087a82610833565b9050919050565b600061088c82610893565b9050919050565b600061089e82610833565b9050919050565b60006108b0826108b7565b9050919050565b60006108c282610833565b9050919050565b60006108d482610826565b9050919050565b60006108e682610853565b9050919050565b60006108f882610826565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61093781610802565b811461094257600080fd5b50565b61094e81610814565b811461095957600080fd5b50565b61096581610853565b811461097057600080fd5b5056fea26469706673582212207d6c6c8f33b4d76e93bf69bcd6cf6a1f6ca0e9d5341787b88700378455e557e964736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "swap(address,address,address,uint256,uint256)": {
        "notice": "Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper. Swaps it for at least 'amountToMin' of token 'to'. Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer. Returns the amount of tokens 'to' transferred to BentoBox. (The BentoBox skim function will be used by the caller to get the swapped funds)."
      },
      "swapExact(address,address,address,address,uint256,uint256)": {
        "notice": "Calculates the amount of token 'from' needed to complete the swap (amountFrom), this should be less than or equal to amountFromMax. Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper. Swaps it for exactly 'exactAmountTo' of token 'to'. Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer. Transfers allocated, but unused 'from' tokens within the BentoBox to 'refundTo' (amountFromMax - amountFrom). Returns the amount of 'from' tokens withdrawn from BentoBox (amountFrom). (The BentoBox skim function will be used by the caller to get the swapped funds)."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}