{
  "address": "0xc022abBa577E991edD6515E28f779Ed4D732B888",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DEGENBOX",
      "outputs": [
        {
          "internalType": "contract IBentoBoxV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JOE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JOEBAR",
      "outputs": [
        {
          "internalType": "contract JoeBar",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "JOE_WAVAX",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIM_WAVAX",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WAVAX",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareToMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareFrom",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "extraShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareReturned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf80855d0caad81589d4f69f73a45b8f5318bd7865c99881d6f80921404069462",
  "receipt": {
    "to": null,
    "from": "0xb4EfdA6DAf5ef75D08869A0f9C0213278fb43b6C",
    "contractAddress": "0xc022abBa577E991edD6515E28f779Ed4D732B888",
    "transactionIndex": 3,
    "gasUsed": "1146578",
    "logsBloom": "0x
    "blockHash": "0xd4dc3a2b4bd5895c993204712b1522ba1dfc1f0a2cb9f93cbeb1e9ae0b66c44d",
    "transactionHash": "0xf80855d0caad81589d4f69f73a45b8f5318bd7865c99881d6f80921404069462",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 6414866,
        "transactionHash": "0xf80855d0caad81589d4f69f73a45b8f5318bd7865c99881d6f80921404069462",
        "address": "0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000c022abba577e991edd6515e28f779ed4d732b888",
          "0x00000000000000000000000057319d41f71e81f3c65f2a47ca4e001ebafd4f33"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 14,
        "blockHash": "0xd4dc3a2b4bd5895c993204712b1522ba1dfc1f0a2cb9f93cbeb1e9ae0b66c44d"
      }
    ],
    "blockNumber": 6414866,
    "cumulativeGasUsed": "1498776",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ff2c8385fca38f976605c9cd55e6a90a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DEGENBOX\",\"outputs\":[{\"internalType\":\"contract IBentoBoxV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JOE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JOEBAR\",\"outputs\":[{\"internalType\":\"contract JoeBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JOE_WAVAX\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIM_WAVAX\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WAVAX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareToMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareFrom\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"extraShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareReturned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swappers/Leverage/XJoeLevSwapper.sol\":\"XJoeLevSwapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\",\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\"},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\",\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\"},\"contracts/swappers/Leverage/XJoeLevSwapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\\\";\\nimport \\\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\\\";\\n\\ninterface IERC20 {\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n}\\n\\ninterface IBentoBoxV1 {\\n    function withdraw(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256, uint256);\\n\\n    function deposit(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 share\\n    ) external returns (uint256, uint256);\\n}\\n\\ninterface JoeBar is IERC20 {\\n    function enter(uint256 amount) external;\\n}\\n\\ncontract XJoeLevSwapper {\\n    IBentoBoxV1 public constant DEGENBOX = IBentoBoxV1(0x1fC83f75499b7620d53757f0b01E2ae626aAE530);\\n    JoeBar public constant JOEBAR = JoeBar(0x57319d41F71E81F3c65F2a47CA4e001EbAFd4F33);\\n    IERC20 public constant JOE = IERC20(0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd);\\n    IERC20 public constant WAVAX = IERC20(0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7);\\n    IERC20 public constant MIM = IERC20(0x130966628846BFd36ff31a822705796e8cb8C18D);\\n\\n    IUniswapV2Pair public constant MIM_WAVAX = IUniswapV2Pair(0x781655d802670bbA3c89aeBaaEa59D3182fD755D);\\n    IUniswapV2Pair public constant JOE_WAVAX = IUniswapV2Pair(0x454E67025631C065d3cFAD6d71E6892f74487a15);\\n\\n    constructor() {\\n        JOE.approve(address(JOEBAR), type(uint256).max);\\n    }\\n\\n    function _getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) internal pure returns (uint256 amountOut) {\\n        uint256 amountInWithFee = amountIn * 997;\\n        uint256 numerator = amountInWithFee * reserveOut;\\n        uint256 denominator = (reserveIn * 1000) + amountInWithFee;\\n        amountOut = numerator / denominator;\\n    }\\n\\n    function swap(\\n        address recipient,\\n        uint256 shareToMin,\\n        uint256 shareFrom\\n    ) public returns (uint256 extraShare, uint256 shareReturned) {\\n        (uint256 amountFrom, ) = DEGENBOX.withdraw(MIM, address(this), address(this), 0, shareFrom);\\n\\n        // Swap MIM to AVAX\\n        (uint256 reserve0, uint256 reserve1, ) = MIM_WAVAX.getReserves();\\n        uint256 avaxFromMim = _getAmountOut(amountFrom, reserve0, reserve1);\\n        MIM.transfer(address(MIM_WAVAX), amountFrom);\\n        MIM_WAVAX.swap(0, avaxFromMim, address(this), new bytes(0));\\n\\n        // Swap AVAX to JOE\\n        (reserve0, reserve1, ) = JOE_WAVAX.getReserves();\\n        uint256 joeFromAvax = _getAmountOut(avaxFromMim, reserve1, reserve0);\\n        WAVAX.transfer(address(JOE_WAVAX), avaxFromMim);\\n        JOE_WAVAX.swap(joeFromAvax, 0, address(this), new bytes(0));\\n\\n        JOEBAR.enter(joeFromAvax);\\n        uint256 amountTo = JOEBAR.balanceOf(address(this));\\n\\n        JOEBAR.transfer(address(DEGENBOX), amountTo);\\n        (, shareReturned) = DEGENBOX.deposit(JOEBAR, address(DEGENBOX), recipient, amountTo, 0);\\n        extraShare = shareReturned - shareToMin;\\n    }\\n}\\n\",\"keccak256\":\"0x187c41b765398a65f664a8dc4aa8221b3790947447a676a01efbec5409e71f28\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50736e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd73ffffffffffffffffffffffffffffffffffffffff1663095ea7b37357319d41f71e81f3c65f2a47ca4e001ebafd4f337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016200009792919062000154565b602060405180830381600087803b158015620000b257600080fd5b505af1158015620000c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ed9190620001c3565b50620001f5565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012182620000f4565b9050919050565b620001338162000114565b82525050565b6000819050919050565b6200014e8162000139565b82525050565b60006040820190506200016b600083018562000128565b6200017a602083018462000143565b9392505050565b600080fd5b60008115159050919050565b6200019d8162000186565b8114620001a957600080fd5b50565b600081519050620001bd8162000192565b92915050565b600060208284031215620001dc57620001db62000181565b5b6000620001ec84828501620001ac565b91505092915050565b61132b80620002056000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063daec383d1161005b578063daec383d14610118578063e0bc66b814610136578063f25c46ae14610154578063ffebad301461017257610088565b80631f95aa451461008d57806373b295c2146100ab5780639f1d0f59146100c9578063bad0235f146100fa575b600080fd5b610095610190565b6040516100a29190610b44565b60405180910390f35b6100b36101a8565b6040516100c09190610b80565b60405180910390f35b6100e360048036038101906100de9190610c14565b6101c0565b6040516100f1929190610c76565b60405180910390f35b6101026109f5565b60405161010f9190610cc0565b60405180910390f35b610120610a0d565b60405161012d9190610b80565b60405180910390f35b61013e610a25565b60405161014b9190610cfc565b60405180910390f35b61015c610a3d565b6040516101699190610cc0565b60405180910390f35b61017a610a55565b6040516101879190610b80565b60405180910390f35b7357319d41f71e81f3c65f2a47ca4e001ebafd4f3381565b73b31f66aa3c1e785363f0875a1b74e27b85fd66c781565b6000806000731fc83f75499b7620d53757f0b01e2ae626aae53073ffffffffffffffffffffffffffffffffffffffff166397da6d3073130966628846bfd36ff31a822705796e8cb8c18d30306000896040518663ffffffff1660e01b815260040161022f959493929190610d61565b6040805180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610dc9565b50905060008073781655d802670bba3c89aebaaea59d3182fd755d73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610e8b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600061034a848484610a6d565b905073130966628846bfd36ff31a822705796e8cb8c18d73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73781655d802670bba3c89aebaaea59d3182fd755d866040518363ffffffff1660e01b81526004016103af929190610ede565b602060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104019190610f3f565b5073781655d802670bba3c89aebaaea59d3182fd755d73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f60008330600067ffffffffffffffff81111561045157610450610f6c565b5b6040519080825280601f01601f1916602001820160405280156104835781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016104a39493929190611034565b600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b5050505073454e67025631c065d3cfad6d71e6892f74487a1573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561052f57600080fd5b505afa158015610543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105679190610e8b565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff16915050809350819450505060006105a3828486610a6d565b905073b31f66aa3c1e785363f0875a1b74e27b85fd66c773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73454e67025631c065d3cfad6d71e6892f74487a15846040518363ffffffff1660e01b8152600401610608929190610ede565b602060405180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a9190610f3f565b5073454e67025631c065d3cfad6d71e6892f74487a1573ffffffffffffffffffffffffffffffffffffffff1663022c0d9f82600030600067ffffffffffffffff8111156106aa576106a9610f6c565b5b6040519080825280601f01601f1916602001820160405280156106dc5781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016106fc9493929190611080565b600060405180830381600087803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b505050507357319d41f71e81f3c65f2a47ca4e001ebafd4f3373ffffffffffffffffffffffffffffffffffffffff1663a59f3e0c826040518263ffffffff1660e01b815260040161077b91906110cc565b600060405180830381600087803b15801561079557600080fd5b505af11580156107a9573d6000803e3d6000fd5b5050505060007357319d41f71e81f3c65f2a47ca4e001ebafd4f3373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107fc91906110e7565b60206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190611102565b90507357319d41f71e81f3c65f2a47ca4e001ebafd4f3373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb731fc83f75499b7620d53757f0b01e2ae626aae530836040518363ffffffff1660e01b81526004016108b1929190610ede565b602060405180830381600087803b1580156108cb57600080fd5b505af11580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190610f3f565b50731fc83f75499b7620d53757f0b01e2ae626aae53073ffffffffffffffffffffffffffffffffffffffff166302b9446c7357319d41f71e81f3c65f2a47ca4e001ebafd4f33731fc83f75499b7620d53757f0b01e2ae626aae5308e8560006040518663ffffffff1660e01b815260040161098295949392919061112f565b6040805180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190610dc9565b90508097505089876109e591906111b1565b9750505050505050935093915050565b73781655d802670bba3c89aebaaea59d3182fd755d81565b73130966628846bfd36ff31a822705796e8cb8c18d81565b731fc83f75499b7620d53757f0b01e2ae626aae53081565b73454e67025631c065d3cfad6d71e6892f74487a1581565b736e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd81565b6000806103e585610a7e91906111e5565b905060008382610a8e91906111e5565b90506000826103e887610aa191906111e5565b610aab919061123f565b90508082610ab991906112c4565b93505050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b0a610b05610b0084610ac5565b610ae5565b610ac5565b9050919050565b6000610b1c82610aef565b9050919050565b6000610b2e82610b11565b9050919050565b610b3e81610b23565b82525050565b6000602082019050610b596000830184610b35565b92915050565b6000610b6a82610b11565b9050919050565b610b7a81610b5f565b82525050565b6000602082019050610b956000830184610b71565b92915050565b600080fd5b6000610bab82610ac5565b9050919050565b610bbb81610ba0565b8114610bc657600080fd5b50565b600081359050610bd881610bb2565b92915050565b6000819050919050565b610bf181610bde565b8114610bfc57600080fd5b50565b600081359050610c0e81610be8565b92915050565b600080600060608486031215610c2d57610c2c610b9b565b5b6000610c3b86828701610bc9565b9350506020610c4c86828701610bff565b9250506040610c5d86828701610bff565b9150509250925092565b610c7081610bde565b82525050565b6000604082019050610c8b6000830185610c67565b610c986020830184610c67565b9392505050565b6000610caa82610b11565b9050919050565b610cba81610c9f565b82525050565b6000602082019050610cd56000830184610cb1565b92915050565b6000610ce682610b11565b9050919050565b610cf681610cdb565b82525050565b6000602082019050610d116000830184610ced565b92915050565b610d2081610ba0565b82525050565b6000819050919050565b6000610d4b610d46610d4184610d26565b610ae5565b610bde565b9050919050565b610d5b81610d30565b82525050565b600060a082019050610d766000830188610b71565b610d836020830187610d17565b610d906040830186610d17565b610d9d6060830185610d52565b610daa6080830184610c67565b9695505050505050565b600081519050610dc381610be8565b92915050565b60008060408385031215610de057610ddf610b9b565b5b6000610dee85828601610db4565b9250506020610dff85828601610db4565b9150509250929050565b60006dffffffffffffffffffffffffffff82169050919050565b610e2c81610e09565b8114610e3757600080fd5b50565b600081519050610e4981610e23565b92915050565b600063ffffffff82169050919050565b610e6881610e4f565b8114610e7357600080fd5b50565b600081519050610e8581610e5f565b92915050565b600080600060608486031215610ea457610ea3610b9b565b5b6000610eb286828701610e3a565b9350506020610ec386828701610e3a565b9250506040610ed486828701610e76565b9150509250925092565b6000604082019050610ef36000830185610d17565b610f006020830184610c67565b9392505050565b60008115159050919050565b610f1c81610f07565b8114610f2757600080fd5b50565b600081519050610f3981610f13565b92915050565b600060208284031215610f5557610f54610b9b565b5b6000610f6384828501610f2a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015610fd5578082015181840152602081019050610fba565b83811115610fe4576000848401525b50505050565b6000601f19601f8301169050919050565b600061100682610f9b565b6110108185610fa6565b9350611020818560208601610fb7565b61102981610fea565b840191505092915050565b60006080820190506110496000830187610d52565b6110566020830186610c67565b6110636040830185610d17565b81810360608301526110758184610ffb565b905095945050505050565b60006080820190506110956000830187610c67565b6110a26020830186610d52565b6110af6040830185610d17565b81810360608301526110c18184610ffb565b905095945050505050565b60006020820190506110e16000830184610c67565b92915050565b60006020820190506110fc6000830184610d17565b92915050565b60006020828403121561111857611117610b9b565b5b600061112684828501610db4565b91505092915050565b600060a0820190506111446000830188610b35565b6111516020830187610d17565b61115e6040830186610d17565b61116b6060830185610c67565b6111786080830184610d52565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111bc82610bde565b91506111c783610bde565b9250828210156111da576111d9611182565b5b828203905092915050565b60006111f082610bde565b91506111fb83610bde565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561123457611233611182565b5b828202905092915050565b600061124a82610bde565b915061125583610bde565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561128a57611289611182565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006112cf82610bde565b91506112da83610bde565b9250826112ea576112e9611295565b5b82820490509291505056fea2646970667358221220f57b173c6334027d89c1affc0e18d95a8f26b18f717d6efc9dad5c5a8e81974464736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063daec383d1161005b578063daec383d14610118578063e0bc66b814610136578063f25c46ae14610154578063ffebad301461017257610088565b80631f95aa451461008d57806373b295c2146100ab5780639f1d0f59146100c9578063bad0235f146100fa575b600080fd5b610095610190565b6040516100a29190610b44565b60405180910390f35b6100b36101a8565b6040516100c09190610b80565b60405180910390f35b6100e360048036038101906100de9190610c14565b6101c0565b6040516100f1929190610c76565b60405180910390f35b6101026109f5565b60405161010f9190610cc0565b60405180910390f35b610120610a0d565b60405161012d9190610b80565b60405180910390f35b61013e610a25565b60405161014b9190610cfc565b60405180910390f35b61015c610a3d565b6040516101699190610cc0565b60405180910390f35b61017a610a55565b6040516101879190610b80565b60405180910390f35b7357319d41f71e81f3c65f2a47ca4e001ebafd4f3381565b73b31f66aa3c1e785363f0875a1b74e27b85fd66c781565b6000806000731fc83f75499b7620d53757f0b01e2ae626aae53073ffffffffffffffffffffffffffffffffffffffff166397da6d3073130966628846bfd36ff31a822705796e8cb8c18d30306000896040518663ffffffff1660e01b815260040161022f959493929190610d61565b6040805180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610dc9565b50905060008073781655d802670bba3c89aebaaea59d3182fd755d73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610e8b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600061034a848484610a6d565b905073130966628846bfd36ff31a822705796e8cb8c18d73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73781655d802670bba3c89aebaaea59d3182fd755d866040518363ffffffff1660e01b81526004016103af929190610ede565b602060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104019190610f3f565b5073781655d802670bba3c89aebaaea59d3182fd755d73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f60008330600067ffffffffffffffff81111561045157610450610f6c565b5b6040519080825280601f01601f1916602001820160405280156104835781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016104a39493929190611034565b600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b5050505073454e67025631c065d3cfad6d71e6892f74487a1573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561052f57600080fd5b505afa158015610543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105679190610e8b565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff16915050809350819450505060006105a3828486610a6d565b905073b31f66aa3c1e785363f0875a1b74e27b85fd66c773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73454e67025631c065d3cfad6d71e6892f74487a15846040518363ffffffff1660e01b8152600401610608929190610ede565b602060405180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a9190610f3f565b5073454e67025631c065d3cfad6d71e6892f74487a1573ffffffffffffffffffffffffffffffffffffffff1663022c0d9f82600030600067ffffffffffffffff8111156106aa576106a9610f6c565b5b6040519080825280601f01601f1916602001820160405280156106dc5781602001600182028036833780820191505090505b506040518563ffffffff1660e01b81526004016106fc9493929190611080565b600060405180830381600087803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b505050507357319d41f71e81f3c65f2a47ca4e001ebafd4f3373ffffffffffffffffffffffffffffffffffffffff1663a59f3e0c826040518263ffffffff1660e01b815260040161077b91906110cc565b600060405180830381600087803b15801561079557600080fd5b505af11580156107a9573d6000803e3d6000fd5b5050505060007357319d41f71e81f3c65f2a47ca4e001ebafd4f3373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107fc91906110e7565b60206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190611102565b90507357319d41f71e81f3c65f2a47ca4e001ebafd4f3373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb731fc83f75499b7620d53757f0b01e2ae626aae530836040518363ffffffff1660e01b81526004016108b1929190610ede565b602060405180830381600087803b1580156108cb57600080fd5b505af11580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190610f3f565b50731fc83f75499b7620d53757f0b01e2ae626aae53073ffffffffffffffffffffffffffffffffffffffff166302b9446c7357319d41f71e81f3c65f2a47ca4e001ebafd4f33731fc83f75499b7620d53757f0b01e2ae626aae5308e8560006040518663ffffffff1660e01b815260040161098295949392919061112f565b6040805180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190610dc9565b90508097505089876109e591906111b1565b9750505050505050935093915050565b73781655d802670bba3c89aebaaea59d3182fd755d81565b73130966628846bfd36ff31a822705796e8cb8c18d81565b731fc83f75499b7620d53757f0b01e2ae626aae53081565b73454e67025631c065d3cfad6d71e6892f74487a1581565b736e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd81565b6000806103e585610a7e91906111e5565b905060008382610a8e91906111e5565b90506000826103e887610aa191906111e5565b610aab919061123f565b90508082610ab991906112c4565b93505050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b0a610b05610b0084610ac5565b610ae5565b610ac5565b9050919050565b6000610b1c82610aef565b9050919050565b6000610b2e82610b11565b9050919050565b610b3e81610b23565b82525050565b6000602082019050610b596000830184610b35565b92915050565b6000610b6a82610b11565b9050919050565b610b7a81610b5f565b82525050565b6000602082019050610b956000830184610b71565b92915050565b600080fd5b6000610bab82610ac5565b9050919050565b610bbb81610ba0565b8114610bc657600080fd5b50565b600081359050610bd881610bb2565b92915050565b6000819050919050565b610bf181610bde565b8114610bfc57600080fd5b50565b600081359050610c0e81610be8565b92915050565b600080600060608486031215610c2d57610c2c610b9b565b5b6000610c3b86828701610bc9565b9350506020610c4c86828701610bff565b9250506040610c5d86828701610bff565b9150509250925092565b610c7081610bde565b82525050565b6000604082019050610c8b6000830185610c67565b610c986020830184610c67565b9392505050565b6000610caa82610b11565b9050919050565b610cba81610c9f565b82525050565b6000602082019050610cd56000830184610cb1565b92915050565b6000610ce682610b11565b9050919050565b610cf681610cdb565b82525050565b6000602082019050610d116000830184610ced565b92915050565b610d2081610ba0565b82525050565b6000819050919050565b6000610d4b610d46610d4184610d26565b610ae5565b610bde565b9050919050565b610d5b81610d30565b82525050565b600060a082019050610d766000830188610b71565b610d836020830187610d17565b610d906040830186610d17565b610d9d6060830185610d52565b610daa6080830184610c67565b9695505050505050565b600081519050610dc381610be8565b92915050565b60008060408385031215610de057610ddf610b9b565b5b6000610dee85828601610db4565b9250506020610dff85828601610db4565b9150509250929050565b60006dffffffffffffffffffffffffffff82169050919050565b610e2c81610e09565b8114610e3757600080fd5b50565b600081519050610e4981610e23565b92915050565b600063ffffffff82169050919050565b610e6881610e4f565b8114610e7357600080fd5b50565b600081519050610e8581610e5f565b92915050565b600080600060608486031215610ea457610ea3610b9b565b5b6000610eb286828701610e3a565b9350506020610ec386828701610e3a565b9250506040610ed486828701610e76565b9150509250925092565b6000604082019050610ef36000830185610d17565b610f006020830184610c67565b9392505050565b60008115159050919050565b610f1c81610f07565b8114610f2757600080fd5b50565b600081519050610f3981610f13565b92915050565b600060208284031215610f5557610f54610b9b565b5b6000610f6384828501610f2a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015610fd5578082015181840152602081019050610fba565b83811115610fe4576000848401525b50505050565b6000601f19601f8301169050919050565b600061100682610f9b565b6110108185610fa6565b9350611020818560208601610fb7565b61102981610fea565b840191505092915050565b60006080820190506110496000830187610d52565b6110566020830186610c67565b6110636040830185610d17565b81810360608301526110758184610ffb565b905095945050505050565b60006080820190506110956000830187610c67565b6110a26020830186610d52565b6110af6040830185610d17565b81810360608301526110c18184610ffb565b905095945050505050565b60006020820190506110e16000830184610c67565b92915050565b60006020820190506110fc6000830184610d17565b92915050565b60006020828403121561111857611117610b9b565b5b600061112684828501610db4565b91505092915050565b600060a0820190506111446000830188610b35565b6111516020830187610d17565b61115e6040830186610d17565b61116b6060830185610c67565b6111786080830184610d52565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111bc82610bde565b91506111c783610bde565b9250828210156111da576111d9611182565b5b828203905092915050565b60006111f082610bde565b91506111fb83610bde565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561123457611233611182565b5b828202905092915050565b600061124a82610bde565b915061125583610bde565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561128a57611289611182565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006112cf82610bde565b91506112da83610bde565b9250826112ea576112e9611295565b5b82820490509291505056fea2646970667358221220f57b173c6334027d89c1affc0e18d95a8f26b18f717d6efc9dad5c5a8e81974464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}