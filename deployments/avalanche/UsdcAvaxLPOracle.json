{
  "address": "0x648Af26592C7425447B8EEe647F4106b97a27793",
  "abi": [
    {
      "inputs": [],
      "name": "AVAX",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LPAVAX",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xea43ed9b08f8d24d8966f4706abe36e05651b5bff12e8021aba206c5cc589b90",
  "receipt": {
    "to": null,
    "from": "0xb4EfdA6DAf5ef75D08869A0f9C0213278fb43b6C",
    "contractAddress": "0x648Af26592C7425447B8EEe647F4106b97a27793",
    "transactionIndex": 1,
    "gasUsed": "476474",
    "logsBloom": "0x
    "blockHash": "0x540333d6a378987b7350692502bcbffffae0f95774ef7cbe6b836b397a2dbff0",
    "transactionHash": "0xea43ed9b08f8d24d8966f4706abe36e05651b5bff12e8021aba206c5cc589b90",
    "logs": [],
    "blockNumber": 5675778,
    "cumulativeGasUsed": "632906",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "59e399106e5dac6a3c5003a0202e1662",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AVAX\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPAVAX\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/UsdcAvaxLPOracle.sol\":\"UsdcAvaxLPOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.6.12;\\n\\ninterface IOracle {\\n    /// @notice Get the latest exchange rate.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\n\\n    /// @notice Check the last exchange rate without any state changes.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\n\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\n\\n    /// @notice Returns a human readable (short) name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable symbol name about this oracle.\\n    function symbol(bytes calldata data) external view returns (string memory);\\n\\n    /// @notice Returns a human readable name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable name about this oracle.\\n    function name(bytes calldata data) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x558a9784fc707121492ac785a12d99b4af8d00d87bee215eeb9e40be874090f3\",\"license\":\"MIT\"},\"contracts/oracles/UsdcAvaxLPOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\nimport \\\"../interfaces/IOracle.sol\\\";\\n\\n// Chainlink Aggregator\\n\\ninterface IAggregator {\\n    function latestAnswer() external view returns (int256 answer);\\n}\\n\\ncontract UsdcAvaxLPOracle is IOracle {\\n    IAggregator constant public AVAX = IAggregator(0x0A77230d17318075983913bC2145DB16C7366156);\\n    IAggregator constant public LPAVAX = IAggregator(0xD5d0f5d872ed4eB74AA3E8fa6D833d6f7603D2EC);\\n\\n    // Calculates the lastest exchange rate\\n    // Uses both divide and multiply only for tokens not supported directly by Chainlink, for example MKR/USD\\n    function _get() internal view returns (uint256) {\\n\\n        uint256 lpPrice = uint256(LPAVAX.latestAnswer()) * uint256(AVAX.latestAnswer());\\n\\n        return 1e44 / lpPrice;\\n    }\\n\\n    // Get the latest exchange rate\\n    /// @inheritdoc IOracle\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the last exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the current spot exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\\n        (, rate) = peek(data);\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function name(bytes calldata) public pure override returns (string memory) {\\n        return \\\"LP AVAX/USDC\\\";\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function symbol(bytes calldata) public pure override returns (string memory) {\\n        return \\\"LP AVAX/USDC\\\";\\n    }\\n}\\n\",\"keccak256\":\"0xdc656d25b0996a4989fc210ddeacea2d2f1a61fa255b9ec7e583b03e169b74f9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506107ae806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d39bbef01161005b578063d39bbef0146100ee578063d568866c1461011e578063d6d7d5251461014e578063eeb8a8d31461017f5761007d565b80635fedee3114610082578063b59f091e146100a0578063c699c4d6146100be575b600080fd5b61008a6101b0565b604051610097919061055c565b60405180910390f35b6100a86101c8565b6040516100b5919061055c565b60405180910390f35b6100d860048036038101906100d3919061045f565b6101e0565b6040516100e59190610577565b60405180910390f35b6101086004803603810190610103919061045f565b610220565b6040516101159190610599565b60405180910390f35b6101386004803603810190610133919061045f565b610238565b6040516101459190610577565b60405180910390f35b6101686004803603810190610163919061045f565b610278565b604051610176929190610533565b60405180910390f35b6101996004803603810190610194919061045f565b610290565b6040516101a7929190610533565b60405180910390f35b73d5d0f5d872ed4eb74aa3e8fa6d833d6f7603d2ec81565b730a77230d17318075983913bc2145db16c736615681565b60606040518060400160405280600c81526020017f4c5020415641582f555344430000000000000000000000000000000000000000815250905092915050565b600061022c8383610290565b90508091505092915050565b60606040518060400160405280600c81526020017f4c5020415641582f555344430000000000000000000000000000000000000000815250905092915050565b60008060016102856102a8565b915091509250929050565b600080600161029d6102a8565b915091509250929050565b600080730a77230d17318075983913bc2145db16c736615673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030557600080fd5b505afa158015610319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033d91906104a4565b73d5d0f5d872ed4eb74aa3e8fa6d833d6f7603d2ec73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561039757600080fd5b505afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf91906104a4565b6103d99190610601565b90508072047bf19673df52e37f2410011d1000000000006103fa91906105d0565b91505090565b60008083601f84011261041257600080fd5b8235905067ffffffffffffffff81111561042b57600080fd5b60208301915083600182028301111561044357600080fd5b9250929050565b60008151905061045981610761565b92915050565b6000806020838503121561047257600080fd5b600083013567ffffffffffffffff81111561048c57600080fd5b61049885828601610400565b92509250509250929050565b6000602082840312156104b657600080fd5b60006104c48482850161044a565b91505092915050565b6104d68161065b565b82525050565b6104e58161069b565b82525050565b60006104f6826105b4565b61050081856105bf565b93506105108185602086016106bf565b61051981610750565b840191505092915050565b61052d81610691565b82525050565b600060408201905061054860008301856104cd565b6105556020830184610524565b9392505050565b600060208201905061057160008301846104dc565b92915050565b6000602082019050818103600083015261059181846104eb565b905092915050565b60006020820190506105ae6000830184610524565b92915050565b600081519050919050565b600082825260208201905092915050565b60006105db82610691565b91506105e683610691565b9250826105f6576105f5610721565b5b828204905092915050565b600061060c82610691565b915061061783610691565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106505761064f6106f2565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106a6826106ad565b9050919050565b60006106b882610671565b9050919050565b60005b838110156106dd5780820151818401526020810190506106c2565b838111156106ec576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61076a81610667565b811461077557600080fd5b5056fea2646970667358221220ac1b063e4c477256cfeb3e046fce45ef86a9ff9ae936e41758129815979f9a1e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d39bbef01161005b578063d39bbef0146100ee578063d568866c1461011e578063d6d7d5251461014e578063eeb8a8d31461017f5761007d565b80635fedee3114610082578063b59f091e146100a0578063c699c4d6146100be575b600080fd5b61008a6101b0565b604051610097919061055c565b60405180910390f35b6100a86101c8565b6040516100b5919061055c565b60405180910390f35b6100d860048036038101906100d3919061045f565b6101e0565b6040516100e59190610577565b60405180910390f35b6101086004803603810190610103919061045f565b610220565b6040516101159190610599565b60405180910390f35b6101386004803603810190610133919061045f565b610238565b6040516101459190610577565b60405180910390f35b6101686004803603810190610163919061045f565b610278565b604051610176929190610533565b60405180910390f35b6101996004803603810190610194919061045f565b610290565b6040516101a7929190610533565b60405180910390f35b73d5d0f5d872ed4eb74aa3e8fa6d833d6f7603d2ec81565b730a77230d17318075983913bc2145db16c736615681565b60606040518060400160405280600c81526020017f4c5020415641582f555344430000000000000000000000000000000000000000815250905092915050565b600061022c8383610290565b90508091505092915050565b60606040518060400160405280600c81526020017f4c5020415641582f555344430000000000000000000000000000000000000000815250905092915050565b60008060016102856102a8565b915091509250929050565b600080600161029d6102a8565b915091509250929050565b600080730a77230d17318075983913bc2145db16c736615673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030557600080fd5b505afa158015610319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033d91906104a4565b73d5d0f5d872ed4eb74aa3e8fa6d833d6f7603d2ec73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561039757600080fd5b505afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf91906104a4565b6103d99190610601565b90508072047bf19673df52e37f2410011d1000000000006103fa91906105d0565b91505090565b60008083601f84011261041257600080fd5b8235905067ffffffffffffffff81111561042b57600080fd5b60208301915083600182028301111561044357600080fd5b9250929050565b60008151905061045981610761565b92915050565b6000806020838503121561047257600080fd5b600083013567ffffffffffffffff81111561048c57600080fd5b61049885828601610400565b92509250509250929050565b6000602082840312156104b657600080fd5b60006104c48482850161044a565b91505092915050565b6104d68161065b565b82525050565b6104e58161069b565b82525050565b60006104f6826105b4565b61050081856105bf565b93506105108185602086016106bf565b61051981610750565b840191505092915050565b61052d81610691565b82525050565b600060408201905061054860008301856104cd565b6105556020830184610524565b9392505050565b600060208201905061057160008301846104dc565b92915050565b6000602082019050818103600083015261059181846104eb565b905092915050565b60006020820190506105ae6000830184610524565b92915050565b600081519050919050565b600082825260208201905092915050565b60006105db82610691565b91506105e683610691565b9250826105f6576105f5610721565b5b828204905092915050565b600061060c82610691565b915061061783610691565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106505761064f6106f2565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106a6826106ad565b9050919050565b60006106b882610671565b9050919050565b60005b838110156106dd5780820151818401526020810190506106c2565b838111156106ec576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61076a81610667565b811461077557600080fd5b5056fea2646970667358221220ac1b063e4c477256cfeb3e046fce45ef86a9ff9ae936e41758129815979f9a1e64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "name(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "peekSpot(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate."
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle."
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes."
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}